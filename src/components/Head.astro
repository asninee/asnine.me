---
import { ViewTransitions } from 'astro:transitions'

const { title, description } = Astro.props
const canonicalURL = new URL(Astro.url.pathname, Astro.site)

const image = new URL(
  canonicalURL.pathname +
    (canonicalURL.pathname.endsWith('/') ? '' : '/') +
    'og.png',
  Astro.site
)
---

<!-- global metadata -->
<meta charset='utf-8' />
<link rel='icon' type='image/svg+xml' href='/favicon.svg' />
<meta name='viewport' content='width=device-width' />
<meta name='generator' content={Astro.generator} />

<!-- canonical url -->
<link rel='canonical' href={canonicalURL} />

<!-- font preloads -->
<link
  rel='preload'
  href='/fonts/Nacelle400-subset.woff2'
  as='font'
  type='font/woff2'
  crossorigin='anonymous'
/>
<link
  rel='preload'
  href='/fonts/Nacelle600-subset.woff2'
  as='font'
  type='font/woff2'
  crossorigin='anonymous'
/>
<link
  rel='preload'
  href='/fonts/Newsreader400-subset.woff2'
  as='font'
  type='font/woff2'
  crossorigin='anonymous'
/>
<link
  rel='preload'
  href='/fonts/Newsreader600-subset.woff2'
  as='font'
  type='font/woff2'
  crossorigin='anonymous'
/>
<link
  rel='preload'
  href='/fonts/CommitMono450-subset.woff2'
  as='font'
  type='font/woff2'
  crossorigin='anonymous'
/>

<!-- primary meta tags -->
<title>{title}</title>
<meta name='title' content={title} />
<meta name='description' content={description} />

<!-- open graph -->
<meta property='og:type' content='website' />
<meta property='og:url' content={Astro.url} />
<meta property='og:title' content={title} />
<meta property='og:description' content={description} />
<meta property='og:image' content={image} />

<!-- twitter -->
<meta property='twitter:card' content='summary_large_image' />
<meta property='twitter:url' content={Astro.url} />
<meta property='twitter:title' content={title} />
<meta property='twitter:description' content={description} />
<meta property='twitter:image' content={image} />

<!-- sitemap -->
<link rel='sitemap' href='/sitemap-index.xml' />

<!-- transitions -->
<ViewTransitions />

<!-- scripts -->
<script is:inline>
  const setTheme = doc => {
    if (
      localStorage.theme === 'dark' ||
      (!localStorage.getItem('theme') &&
        window.matchMedia('(prefers-color-scheme: dark)').matches)
    ) {
      doc.documentElement.classList.add('dark')
    } else {
      doc.documentElement.classList.remove('dark')
    }
  }
  setTheme(document)
  document.addEventListener('astro:before-swap', e => setTheme(e.newDocument))

  window.goatcounter = { no_onload: true }

  window.addEventListener('hashchange', e => {
    window.goatcounter.count({
      path: location.pathname + location.search + location.hash,
    })
  })
</script>

<script
  data-goatcounter='https://stats.asnine.me/count'
  async
  src='//gc.zgo.at/count.js'></script>
