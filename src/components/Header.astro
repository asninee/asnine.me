---
import { formatDate } from '@lib/date'
import { Icon } from 'astro-icon/components'
import { getEntry } from 'astro:content'
import BackLink from './BackLink.astro'

const pathname = Astro.url.pathname
const pagename = pathname.match(/\/([^\/]+)\/?$/ || [])?.[1]
const isPost = pathname.includes('/blog/') && !pathname.endsWith('/blog/')
const post = isPost && (await getEntry('blog', pagename))
---

<header
  data-header
  class='sticky top-0 z-50 flex flex-wrap items-center justify-between bg-bg py-3'
>
  {
    pathname === '/' ? (
      <div class='flex items-center gap-1'>
        <p>asnine</p>
        <Icon
          name='fluent:slash-forward-24-regular'
          class='h-6 w-4 text-neutral-400 dark:text-neutral-600'
        />
        <p>full-stack developer</p>
      </div>
    ) : isPost ? (
      <div class='flex items-center gap-6'>
        <BackLink href='/blog' />
        <p>{post?.data.title}</p>
      </div>
    ) : (
      <div class='flex items-center gap-6'>
        <BackLink href='/' />
        <p>{pagename}</p>
      </div>
    )
  }
  {
    isPost && (
      <>
        {post?.data.updated ? (
          <div class='flex items-center gap-1'>
            <small class='-my-2 rounded-md bg-neutral-200 px-1 dark:bg-neutral-800'>
              upd.
            </small>
            <small class='text-sec'>
              {formatDate(post.data.updated, true)}
            </small>
          </div>
        ) : (
          <div class='flex items-center gap-1'>
            <small class='-my-2 rounded-md bg-neutral-200 px-1 dark:bg-neutral-800'>
              pub.
            </small>
            <small class='text-sec'>
              {formatDate(post.data.published, true)}
            </small>
          </div>
        )}
      </>
    )
  }
</header>
