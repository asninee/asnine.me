---
import Post from '@/components/Post.astro'
import Base from '@/layouts/Base.astro'
import { sortPostsByDate } from '@/lib/date'
import type { CollectionEntry } from 'astro:content'
import { getCollection } from 'astro:content'

const title = 'asnine â€¢ blog'

type Posts = {
  [year: string]: CollectionEntry<'blog'>[]
}

const posts = sortPostsByDate(
  await getCollection('blog', ({ data }) => data.draft !== true)
).reduce((acc: Posts, p) => {
  const year = p.data.published.getFullYear().toString()
  if (!acc[year]) acc[year] = []
  acc[year].push(p)

  return acc
}, {})

const years = Object.keys(posts).sort((a, b) => parseInt(b) - parseInt(a))
---

<Base
  {title}
  description='a collection of all my extended thoughts and experiences'
>
  <h1>blog</h1>
  {
    years.map(y => (
      <div class='mt-8'>
        <small class='text-l/sec dark:text-d/sec'>{y}</small>
        <ul class='mt-2'>
          {posts[y].map(p => (
            <li class='list-none'>
              <Post
                slug={p.slug}
                title={p.data.title}
                desc={p.data.desc}
                date={p.data.published}
              />
            </li>
          ))}
        </ul>
      </div>
    ))
  }
</Base>
