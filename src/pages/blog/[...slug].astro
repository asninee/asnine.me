---
import Image from '@components/Image.astro'
import Link from '@components/Link.astro'
import Base from '@layouts/Base.astro'
import { sortPostsByDate } from '@lib/date'
import { getCollection } from 'astro:content'

export const getStaticPaths = async () => {
  const posts = await sortPostsByDate(
    await getCollection('blog', ({ data }) => data.draft !== true)
  )
  return posts.map((post, index, posts) => ({
    params: { slug: post.slug },
    props: { post, prevPost: posts[index + 1], nextPost: posts[index - 1] },
  }))
}

const {
  post,
  post: {
    data: { title, desc, published, updated },
  },
  prevPost,
  nextPost,
} = Astro.props
const { Content } = await post.render()

export const components = {
  a: Link,
  img: Image,
}
---

<Base class='md' title=`asnine • ${title}` description={desc}>
  <div class='flex flex-col'>
    <h1 class='mb-2'>{title}</h1>
    <div class='flex items-center gap-1'>
      <div class='flex items-center gap-1'>
        <small
          class='px-1 -my-2 rounded-md font-semibold bg-neutral-200 dark:bg-neutral-800'
        >
          published
        </small>
        <small class='text-l/sec dark:text-d/sec'
          >{new Intl.DateTimeFormat('en-GB').format(published)}</small
        >
      </div>
      {
        updated && (
          <div class='flex items-center gap-1'>
            <small class='text-l/sec dark:text-d/sec'>•</small>
            <small class='px-1 -my-2 rounded-md font-semibold bg-neutral-200 dark:bg-neutral-800'>
              updated
            </small>
            <small class='text-l/sec dark:text-d/sec'>
              {new Intl.DateTimeFormat('en-GB').format(updated)}
            </small>
          </div>
        )
      }
    </div>
  </div>

  <div class='flex flex-col gap-4 mt-6 md:gap-5'>
    <Content components={components} />
  </div>

  <hr />

  <div class='flex items-center justify-between flex-nowrap'>
    <div class='self-start'>
      {
        prevPost && (
          <Link
            alternate
            lg
            href={`/blog/${prevPost.slug}`}
            class='flex flex-col gap-1'
            noUnderline
          >
            <small class='font-semibold text-l/sec dark:text-d/sec'>
              Previous
            </small>
            <small>{prevPost.data.title}</small>
          </Link>
        )
      }
    </div>

    <div class='self-end'>
      {
        nextPost && (
          <Link
            alternate
            lg
            href={`/blog/${nextPost.slug}`}
            class='flex flex-col gap-1'
            noUnderline
          >
            <small class='self-end font-semibold text-l/sec dark:text-d/sec'>
              Next
            </small>
            <small>{nextPost.data.title}</small>
          </Link>
        )
      }
    </div>
  </div>
</Base>
