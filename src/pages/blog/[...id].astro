---
import Badge from '@components/Badge.astro'
import Link from '@components/Link.astro'
import SectionList from '@components/SectionList.astro'
import SectionListItem from '@components/SectionListItem.astro'
import TableOfContents from '@components/TableOfContents.astro'
import Version from '@components/Version.astro'
import VersionItem from '@components/VersionItem.astro'
import Base from '@layouts/Base.astro'
import { formatDate } from '@lib/date'
import { getPosts } from '@lib/posts'
import { render } from 'astro:content'

export const getStaticPaths = async () => {
  const posts = await getPosts(false)
  return posts.map((post, index, posts) => ({
    params: { id: post.id },
    props: { post, prevPost: posts[index + 1], nextPost: posts[index - 1] },
  }))
}

const {
  post,
  post: {
    data: { title, desc, published, updated },
  },
  prevPost,
  nextPost,
} = Astro.props
const { Content, headings } = await render(post)

export const components = {
  a: Link,
  Link,
  Version,
  VersionItem,
  Badge,
  SectionList,
  SectionListItem,
}
---

<Base title=`${title} â€¢ asnine` description={desc} post={post}>
  <TableOfContents headings={headings} />
  <section class='flex flex-col'>
    <h1 class='mb-2'>{title}</h1>
    <div class='flex items-center gap-1'>
      {
        updated ? (
          <div class='flex items-center gap-1'>
            <small class='-my-2 rounded-md bg-neutral-200 px-1 dark:bg-neutral-800'>
              upd.
            </small>
            <small class='text-sec'>{formatDate(updated, true)}</small>
          </div>
        ) : (
          <div class='flex items-center gap-1'>
            <small class='-my-2 rounded-md bg-neutral-200 px-1 dark:bg-neutral-800'>
              pub.
            </small>
            <small class='text-sec'>{formatDate(published, true)}</small>
          </div>
        )
      }
    </div>
  </section>

  <article class='md mt-6 flex flex-col gap-4 md:mt-8 md:gap-5'>
    <Content components={components} />
  </article>

  <hr />

  <section class='flex flex-nowrap items-center justify-between'>
    <div class='self-start'>
      {
        prevPost && (
          <Link
            alternate
            lg
            href={`/blog/${prevPost.id}`}
            class='flex flex-col gap-1'
            noUnderline
          >
            <small class='text-sec'>Previous</small>
            <small>{prevPost.data.title}</small>
          </Link>
        )
      }
    </div>

    <div class='self-end'>
      {
        nextPost && (
          <Link
            alternate
            lg
            href={`/blog/${nextPost.id}`}
            class='flex flex-col gap-1'
            noUnderline
          >
            <small class='text-sec self-end'>Next</small>
            <small>{nextPost.data.title}</small>
          </Link>
        )
      }
    </div>
  </section>
</Base>
