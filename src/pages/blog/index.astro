---
import BackLink from '@/components/BackLink.astro'
import Post from '@/components/Post.astro'
import Base from '@/layouts/Base.astro'
import { sortPostsByDate } from '@/lib/date'
import type { CollectionEntry } from 'astro:content'
import { getCollection } from 'astro:content'

const title = 'asnine â€¢ blog'

type Posts = {
  [year: string]: CollectionEntry<'blog'>[]
}

const posts = sortPostsByDate(
  await getCollection('blog', ({ data }) => data.draft !== true)
).reduce((acc: Posts, p) => {
  const year = p.data.date.getFullYear().toString()
  if (!acc[year]) acc[year] = []
  acc[year].push(p)

  return acc
}, {})

const years = Object.keys(posts).sort((a, b) => parseInt(b) - parseInt(a))
---

<Base {title} description='A collection of all my thoughts and experiences'>
  <main class='grow py-4 md:py-8 mb-10 prose'>
    <BackLink href='/' page='home' />

    <h1>blog</h1>
    {
      years.map(y => (
        <div class='mt-8'>
          <small class='text-gray-600 dark:text-gray-500'>{y}</small>
          <ul class='mt-2'>
            {posts[y].map(p => (
              <li class='list-none'>
                <Post
                  slug={p.slug}
                  title={p.data.title}
                  desc={p.data.desc}
                  date={p.data.date}
                />
              </li>
            ))}
          </ul>
        </div>
      ))
    }
  </main>
</Base>
